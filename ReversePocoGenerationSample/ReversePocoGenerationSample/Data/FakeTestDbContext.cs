// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace ReversePocoGenerationSample.Data
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public partial class FakeTestDbContext : ITestDbContext
    {
        public System.Data.Entity.DbSet<Answer> Answers { get; set; }
        public System.Data.Entity.DbSet<AnswerComment> AnswerComments { get; set; }
        public System.Data.Entity.DbSet<Group> Groups { get; set; }
        public System.Data.Entity.DbSet<GroupSurvey> GroupSurveys { get; set; }
        public System.Data.Entity.DbSet<MatrixCol> MatrixCols { get; set; }
        public System.Data.Entity.DbSet<MatrixRow> MatrixRows { get; set; }
        public System.Data.Entity.DbSet<MenuItem> MenuItems { get; set; }
        public System.Data.Entity.DbSet<OptionChoice> OptionChoices { get; set; }
        public System.Data.Entity.DbSet<OptionError> OptionErrors { get; set; }
        public System.Data.Entity.DbSet<Organization> Organizations { get; set; }
        public System.Data.Entity.DbSet<PredefinedDropdown> PredefinedDropdowns { get; set; }
        public System.Data.Entity.DbSet<Question> Questions { get; set; }
        public System.Data.Entity.DbSet<QuestionOption> QuestionOptions { get; set; }
        public System.Data.Entity.DbSet<QuestionType> QuestionTypes { get; set; }
        public System.Data.Entity.DbSet<Role> Roles { get; set; }
        public System.Data.Entity.DbSet<Rule> Rules { get; set; }
        public System.Data.Entity.DbSet<Survey> Surveys { get; set; }
        public System.Data.Entity.DbSet<SurveyComment> SurveyComments { get; set; }
        public System.Data.Entity.DbSet<Surveyee> Surveyees { get; set; }
        public System.Data.Entity.DbSet<SurveyeeSurveyComment> SurveyeeSurveyComments { get; set; }
        public System.Data.Entity.DbSet<SurveySection> SurveySections { get; set; }
        public System.Data.Entity.DbSet<Sysdiagram> Sysdiagrams { get; set; }
        public System.Data.Entity.DbSet<Tablet> Tablets { get; set; }
        public System.Data.Entity.DbSet<User> Users { get; set; }
        public System.Data.Entity.DbSet<UserGroup> UserGroups { get; set; }
        public System.Data.Entity.DbSet<UserTablet> UserTablets { get; set; }

        public FakeTestDbContext()
        {
            Answers = new FakeDbSet<Answer>("AnswerId");
            AnswerComments = new FakeDbSet<AnswerComment>("QuestionCommentId");
            Groups = new FakeDbSet<Group>("GroupId");
            GroupSurveys = new FakeDbSet<GroupSurvey>("GroupSurveyId");
            MatrixCols = new FakeDbSet<MatrixCol>("ColumnId");
            MatrixRows = new FakeDbSet<MatrixRow>("RowId");
            MenuItems = new FakeDbSet<MenuItem>("Id");
            OptionChoices = new FakeDbSet<OptionChoice>("OptionChoiceId");
            OptionErrors = new FakeDbSet<OptionError>("OptionErrorId");
            Organizations = new FakeDbSet<Organization>("OrganizationId");
            PredefinedDropdowns = new FakeDbSet<PredefinedDropdown>("PredefinedDropdownId");
            Questions = new FakeDbSet<Question>("QuestionId");
            QuestionOptions = new FakeDbSet<QuestionOption>("QuestionOptionId");
            QuestionTypes = new FakeDbSet<QuestionType>("QuestionTypeId");
            Roles = new FakeDbSet<Role>("RoleId");
            Rules = new FakeDbSet<Rule>("RuleId");
            Surveys = new FakeDbSet<Survey>("SurveyId");
            SurveyComments = new FakeDbSet<SurveyComment>("SurveyCommentsId");
            Surveyees = new FakeDbSet<Surveyee>("SurveyeeGuid");
            SurveyeeSurveyComments = new FakeDbSet<SurveyeeSurveyComment>("CommentId");
            SurveySections = new FakeDbSet<SurveySection>("SectionId");
            Sysdiagrams = new FakeDbSet<Sysdiagram>("DiagramId");
            Tablets = new FakeDbSet<Tablet>("TabletId");
            Users = new FakeDbSet<User>("UserId");
            UserGroups = new FakeDbSet<UserGroup>("UserGroupId");
            UserTablets = new FakeDbSet<UserTablet>("UserTabletId");

            InitializePartial();
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        partial void InitializePartial();

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }
    }
}
// </auto-generated>
