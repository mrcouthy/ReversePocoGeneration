// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace ReversePocoGenerationSample.Data
{
    using System;

    // Question
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.22.1.0")]
    public partial class QuestionMapping : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Question>
    {
        public QuestionMapping()
            : this("dbo")
        {
        }

        public QuestionMapping(string schema)
        {
            ToTable("Question", schema);
            HasKey(x => x.QuestionId);

            Property(x => x.QuestionId).HasColumnName(@"QuestionId").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PrecedingQuestionId).HasColumnName(@"PrecedingQuestionId").IsRequired().HasColumnType("int");
            Property(x => x.Code).HasColumnName(@"Code").IsOptional().HasColumnType("nvarchar");
            Property(x => x.QuestionText).HasColumnName(@"QuestionText").IsOptional().HasColumnType("nvarchar");
            Property(x => x.Required).HasColumnName(@"Required").IsRequired().HasColumnType("bit");
            Property(x => x.OnlyNumericValue).HasColumnName(@"OnlyNumericValue").IsRequired().HasColumnType("bit");
            Property(x => x.IncludeComment).HasColumnName(@"IncludeComment").IsRequired().HasColumnType("bit");
            Property(x => x.Comment).HasColumnName(@"Comment").IsOptional().HasColumnType("nvarchar");
            Property(x => x.QuestionOrder).HasColumnName(@"QuestionOrder").IsRequired().HasColumnType("int");
            Property(x => x.DependentQuestionId).HasColumnName(@"DependentQuestionId").IsRequired().HasColumnType("int");
            Property(x => x.DependentQuestionOptionId).HasColumnName(@"DependentQuestionOptionId").IsRequired().HasColumnType("int");
            Property(x => x.AllowMultipleChoice).HasColumnName(@"AllowMultipleChoice").IsRequired().HasColumnType("bit");
            Property(x => x.JumpQuestionId).HasColumnName(@"JumpQuestionId").IsRequired().HasColumnType("int");
            Property(x => x.JumpQuestionOptionId).HasColumnName(@"JumpQuestionOptionId").IsRequired().HasColumnType("int");
            Property(x => x.HasPredefinedDropdown).HasColumnName(@"HasPredefinedDropdown").IsRequired().HasColumnType("bit");
            Property(x => x.PredefinedDropdownId).HasColumnName(@"PredefinedDropdownId").IsRequired().HasColumnType("int");
            Property(x => x.SectionId).HasColumnName(@"SectionId").IsRequired().HasColumnType("int");
            Property(x => x.QuestionTypeId).HasColumnName(@"QuestionTypeId").IsRequired().HasColumnType("int");
            Property(x => x.RuleId).HasColumnName(@"RuleId").IsRequired().HasColumnType("int");
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").IsOptional().HasColumnType("nvarchar");
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").IsOptional().HasColumnType("datetime");
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").IsOptional().HasColumnType("nvarchar");
            Property(x => x.ModifiedOn).HasColumnName(@"ModifiedOn").IsOptional().HasColumnType("datetime");
            Property(x => x.DeletedBy).HasColumnName(@"DeletedBy").IsOptional().HasColumnType("nvarchar");
            Property(x => x.DeletedOn).HasColumnName(@"DeletedOn").IsOptional().HasColumnType("datetime");
            Property(x => x.IsActive).HasColumnName(@"IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.IsUpdated).HasColumnName(@"IsUpdated").IsRequired().HasColumnType("bit");

            // Foreign keys
            HasRequired(a => a.QuestionType).WithMany(b => b.Questions).HasForeignKey(c => c.QuestionTypeId); // FK_dbo.Question_dbo.QuestionType_QuestionTypeId
            HasRequired(a => a.SurveySection).WithMany(b => b.Questions).HasForeignKey(c => c.SectionId); // FK_dbo.Question_dbo.SurveySection_SectionId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
